version: 2.1

slack-fail-post-step: &slack-fail-post-step
  post-steps:
    - slack/notify:
        channel: 'deployments'
        mentions: '<@U0PKAAQBB>, <@U0ADZSDP1>'
        event: fail
        template: basic_fail_1

orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
  aws-eks: circleci/aws-eks@2.2.0
  slack: circleci/slack@4.4.2
  docker: circleci/docker@2.0.1

jobs:
  notify-on-start:
    parallelism: 1
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/notify:
          channel: 'deployments'
          template: basic_success_1
          event: pass

  notify-on-success:
    parallelism: 1
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/notify:
          channel: 'deployments'
          template: success_tagged_deploy_1
          event: pass

  build-docker-image:
    machine: true
    resource_class: hexabase-dev/ci-runner
    steps:
      - checkout
      - docker/build:
          image: $IMG_URL/workmgt
          dockerfile: docker/app/Dockerfile
          tag: ${CIRCLE_SHA1:0:7}
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_LOGIN" --password-stdin
            docker push $IMG_URL/workmgt:${CIRCLE_SHA1:0:7}

  gke-update-image:
    machine: true
    resource_class: hexabase-dev/ci-runner
    steps:
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: $EKS_CLUSTER_NAME
          perform-login: true
          install-kubectl: true
      - run:
         name: Update k8s deployment
         command: |
           kubectl set image deployment/workmgt beee-workmgt=$IMG_URL/workmgt:${CIRCLE_SHA1:0:7}
           kubectl rollout status deployment/workmgt -w

workflows:
  build-dockerhub-deploy-eks:
    jobs:
      - notify-on-start:
          filters:
              branches:
                only:
                  - test
                  - deploy
                  - master
          context: slack-secrets

      - build-docker-image:
          filters:
              branches:
                only:
                  - test
                  - deploy
                  - master
          context: hexa-<< pipeline.git.branch >>
          <<: *slack-fail-post-step

      - aws-eks/update-container-image:
          name: deploy-to-staging
          requires:
            - build-docker-image
          filters:
              branches:
                only:
                  - deploy
          context: hexa-deploy
          cluster-name: $EKS_CLUSTER_NAME
          aws-region: $AWS_REGION
          resource-name: "deployment/workmgt"
          container-image-updates: "beee-workmgt=$IMG_URL/workmgt:${CIRCLE_SHA1:0:7}"
          get-rollout-status: true
          watch-rollout-status: true
          namespace: default
          <<: *slack-fail-post-step

      - notify-on-success:
          name: notify-on-success-staging
          requires:
            - deploy-to-staging
          context: slack-secrets

      - aws-eks/update-container-image:
          name: deploy-to-test-ou
          requires:
            - build-docker-image
          filters:
              branches:
                only:
                  - test
          context: hexa-test
          cluster-name: $EKS_CLUSTER_NAME
          aws-region: $AWS_REGION
          resource-name: "deployment/workmgt"
          container-image-updates: "beee-workmgt=$IMG_URL/workmgt:${CIRCLE_SHA1:0:7}"
          get-rollout-status: true
          watch-rollout-status: true
          namespace: hexabase
          <<: *slack-fail-post-step

      - notify-on-success:
          name: notify-on-success-test-ou
          requires:
            - deploy-to-test-ou
          context: slack-secrets

      - slack/on-hold:
          context: slack-secrets
          channel: 'deployments'
          mentions: '<@U0PKAAQBB>, <@U0ADZSDP1>'
          requires:
            - build-docker-image
          filters:
            branches:
              only:
                - master

      - hold:
          type: approval
          requires:
            - build-docker-image
            - slack/on-hold
          filters:
            branches:
              only:
                - master

      - aws-eks/update-container-image:
          name: deploy-to-prod
          requires:
            - hold
          context: hexa-master
          cluster-name: $EKS_CLUSTER_NAME
          aws-region: $AWS_REGION
          resource-name: "deployment/workmgt"
          container-image-updates: "beee-workmgt=$IMG_URL/workmgt:${CIRCLE_SHA1:0:7}"
          get-rollout-status: true
          watch-rollout-status: true
          namespace: default
          <<: *slack-fail-post-step

      - notify-on-success:
          name: notify-on-success-prod
          requires:
            - deploy-to-prod
          context: slack-secrets